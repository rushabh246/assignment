Arrays & Strings
**********************************************************************************************************
Program-1 Monk And Rotation https://www.hackerearth.com/practice/codemonk/

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;
class TestClass
{
public static void main(String[] args)
{
Scanner sc = new Scanner(System.in);
int T = sc.nextInt();
for (int i = 0; i < T; i++) {
int N = sc.nextInt();
int K = sc.nextInt();
K = K % N;
sc.nextLine();
String input = sc.nextLine();
String[] inputStringArray = input.split(" ");
StringBuffer StringBuf = new StringBuffer();
for (int j = 0; j < N; j++) {
StringBuf.append( inputStringArray[ (N + j - K) % N] + " " );
}
System.out.print(StringBuf );
System.out.println("");
}
sc.close();
}
}

----------------------------------------------------------------------------------------------------------------------

Program-2 Monk And Inverse https://www.hackerearth.com/practice/codemonk/

import java.util.*; 
class TestClass {
    public static void main(String args[] ) throws Exception {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        while(T!=0){
            int N = sc.nextInt();
            int M[][] = new int[N][N];
            for(int i=0;i<N;i++){
                for(int j=0;j<N;j++){
                    M[i][j]=sc.nextInt();
                }
            }
            int ans = 0;
            int temp = 0;
            for(int i=0;i<N;i++){
                for(int j=0;j<N;j++){
                    temp = M[i][j];
                    int a=i;
                    int b=j;
                    for(int x=0;x<N;x++){
                        for(int y=0;y<N;y++){
                            if(a <= x && b <= y){
                                if(temp > M[x][y]){
                                    ans++;
                                }
                            }
                        }
                    }
                }
            }
            System.out.println(ans);
            T -= 1;
        }   
    }
}
=============================================================================================================================
Sorting
****************************************************************************************************************************
Program-1 Monk And Nice Strings https://www.hackerearth.com/practice/codemonk/

import java.util.*;

public class TestClass {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] str = new String[n];

        for (int i = 0; i < str.length; i++) {
            str[i] = sc.next();
                int count = 0;
                for (int j = 0; j < i; j++) {
                    if (str[i].compareTo(str[j]) > 0) {
                        count++;
                    }
                }
                System.out.println(count);
        }
        sc.close();
    }
        
}
------------------------------------------------------------------------------------------------------------------------------
Program-2 Monk Suffix sort https://www.hackerearth.com/practice/codemonk/

import java.util.Arrays;
import java.util.Scanner;

public class MonkandSuffixSort {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        String str = s.next();
        int k = s.nextInt();
        String[] arr = new String[str.length()];
        for(int i=0;i<str.length();i++) {
            arr[i] = str.substring(i);
        }
        Arrays.sort(arr);
        System.out.println(arr[k-1]);
        s.close();
    }
}
-----------------------------------------------------------------------------------------------------------------------------
Program-3 Monk Being Monitor https://www.hackerearth.com/practice/codemonk/

import java.util.*;

class TestClass {

    public static void main(String args[]) throws Exception {

        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t != 0) {
            int n = sc.nextInt();
            int a[] = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = sc.nextInt();
            }

            HashMap<Integer, String> h = new HashMap<Integer, String>();

            for (int i = 0; i < a.length; i++) {
                if (h.containsKey(a[i])) {
                    int value = Integer.parseInt(h.get(a[i]));
                    value++;
                    h.put(a[i], Integer.toString(value));
                } else {
                    h.put(a[i], "1");
                }
            }

            int max = 0;
            int min = 1000000;
            for (int i = 0; i < a.length; i++) {
                if (Integer.parseInt(h.get(a[i])) > max) {
                    max = Integer.parseInt(h.get(a[i]));
                }
                if (Integer.parseInt(h.get(a[i])) < min) {
                    min = Integer.parseInt(h.get(a[i]));
                }
            }
         

            if(min==max) 
                System.out.println(-1);
            else
                System.out.println(max-min);
            t--;
        }
        
    }

}